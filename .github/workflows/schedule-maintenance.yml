name: Scheduled Maintenance

on:
  schedule:
    # Run every Sunday at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:

jobs:
  # Update dependencies and create PR if needed
  dependency-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install pip-tools
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools

    - name: Update dependencies
      run: |
        # Create requirements.in from current requirements.txt
        cp requirements.txt requirements.in
        
        # Update to latest versions
        pip-compile --upgrade requirements.in
        
        # Check if there are changes
        if ! diff -q requirements.txt requirements.in > /dev/null; then
          echo "DEPENDENCIES_UPDATED=true" >> $GITHUB_ENV
        fi

    - name: Create Pull Request
      if: env.DEPENDENCIES_UPDATED == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'chore: Update Python dependencies'
        body: |
          ## Automated Dependency Update
          
          This PR updates Python dependencies to their latest versions.
          
          ### Changes
          - Updated requirements.txt with latest package versions
          - Automatically generated by scheduled maintenance workflow
          
          ### Testing
          - [ ] CI/CD pipeline passes
          - [ ] Manual testing completed
          - [ ] Security scan passes
          
          Please review the changes and merge if everything looks good.
        branch: chore/update-dependencies
        delete-branch: true

  # Cleanup old artifacts and packages
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      actions: write
      
    steps:
    - name: Delete old workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 30
        keep_minimum_runs: 10

    - name: Cleanup old container versions
      uses: actions/delete-package-versions@v4
      with:
        package-name: ${{ github.repository }}
        package-type: container
        min-versions-to-keep: 5
        delete-only-untagged-versions: true

  # Security audit
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety bandit

    - name: Run safety check
      run: |
        safety check --json --output safety-report.json || true

    - name: Run bandit security scan
      run: |
        bandit -r web_app/ -f json -o bandit-report.json || true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          safety-report.json
          bandit-report.json